<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LeetCode on Sangjun 개발 블로그</title><link>https://sangjuncha-dev.github.io/categories/leetcode/</link><description>Recent content in LeetCode on Sangjun 개발 블로그</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Tue, 01 Dec 2020 17:30:00 +0900</lastBuildDate><atom:link href="https://sangjuncha-dev.github.io/categories/leetcode/index.xml" rel="self" type="application/rss+xml"/><item><title>LeetCode Python (Easy)</title><link>https://sangjuncha-dev.github.io/posts/algorithm/leetcode/2020-12-01-algorithm-leetcode-python-easy/</link><pubDate>Tue, 01 Dec 2020 17:30:00 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/algorithm/leetcode/2020-12-01-algorithm-leetcode-python-easy/</guid><description>1. Two Sum nums 리스트 속성값 중 두개의 값이 target 값과 동일할때 해당 속성 값의 index 반환 class Solution: def twoSum(self, nums: List[int], target: int) -&amp;gt; List[int]: for i, num in enumerate(nums): for j, num2 in enumerate(nums[i+1:]): if i != j+i+1: if target == num+num2: return [i, j+i+1] 2020-11-27
Runtime: 40 ms, faster than 97.02% of Python3 online submissions for Two Sum. Memory Usage: 14.5 MB, less than 89.</description></item></channel></rss>