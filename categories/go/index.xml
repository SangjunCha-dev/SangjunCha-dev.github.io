<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Go on Sangjun 개발 블로그</title><link>https://sangjuncha-dev.github.io/categories/go/</link><description>Recent content in Go on Sangjun 개발 블로그</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Mon, 02 Aug 2021 17:56:14 +0900</lastBuildDate><atom:link href="https://sangjuncha-dev.github.io/categories/go/index.xml" rel="self" type="application/rss+xml"/><item><title>golang learn-go-with-tests GitBook 정리</title><link>https://sangjuncha-dev.github.io/posts/programming/golang/2021-08-02-golang-learn-go-with-tests/</link><pubDate>Mon, 02 Aug 2021 17:56:14 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/programming/golang/2021-08-02-golang-learn-go-with-tests/</guid><description>사이트 주소 원본 링크
한글 번역 링크
5. struct, method &amp;amp; interface struct 구조체의 변수 첫글자는 대문자여야한다. (외부에서 사용 가능하도록)
type Rectangle struct { Width float64 Height float64 } 구조체 필드이름을 선택적으로 지정할 수 있다.
{shape: Rectangle{Width: 12, Height: 6}, want: 72.0}, {shape: Circle{Radius: 10}, want: 314.1592653589793}, methods func (receiverName ReceiverType) MethodName(args) r Rectangle 수신자 변수를 유형의 첫 번째 문자로 지정하는 것이 Go의 관례이다.
func (r Rectangle) Area() float64 { return 0 } interface Go에서 인터페이스 자료형은 암시적 이다.</description></item><item><title>golang gopacket 라이브러리를 이용한 통신</title><link>https://sangjuncha-dev.github.io/posts/programming/golang/2021-07-29-golang-gopacket/</link><pubDate>Thu, 29 Jul 2021 17:12:58 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/programming/golang/2021-07-29-golang-gopacket/</guid><description>설명 ethernet 통신
이더넷 어댑터 설명(dev.Description)을 기준으로 통신하는 코드이다. 예제 코드 package main import ( &amp;#34;fmt&amp;#34; &amp;#34;log&amp;#34; &amp;#34;net&amp;#34; &amp;#34;strings&amp;#34; &amp;#34;time&amp;#34; &amp;#34;github.com/google/gopacket&amp;#34; &amp;#34;github.com/google/gopacket/layers&amp;#34; &amp;#34;github.com/google/gopacket/pcap&amp;#34; ) var ( device string = &amp;#34;Realtek PCIe GbE Family Controller&amp;#34; eth_name string currentIP string snapshot_len int32 = 1522 promiscuous bool = false err error timeout time.Duration = 30 * time.Second handle *pcap.Handle buffer gopacket.SerializeBuffer options gopacket.SerializeOptions ) func main() { devices, err := pcap.FindAllDevs() if err !</description></item><item><title>노마드코더 쉽고 빠른 Go 시작하기(nomadcoders Go-for-beginners lectures)</title><link>https://sangjuncha-dev.github.io/posts/programming/golang/2021-02-22-go-for-beginners-lectures/</link><pubDate>Mon, 22 Feb 2021 00:09:23 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/programming/golang/2021-02-22-go-for-beginners-lectures/</guid><description>0. 소개 설치 환경 : Windows 10 IDE : vscode
0.1. 설치 해당 URL에서 golang 설치파일을 다운받아 실행
https://golang.org/dl/ 설치파일에서 안내한 경로인 C:\Program Files\Go 폴더에 Go 설치 되었는지 확인 0.2. 설정 Go Path 환경변수 확인 Go는 지정된 Go Path 디렉토리에만 저장되어야함 시스템 환경변수에 등록된 GOPATH 값 확인 %USERPROFILE%\go -&amp;gt; C:\Users\[Profle_Name]\go 해당 경로가 Go Path 환경변수로 사용되는 경로 기본 설정 go 디렉토리로 이동하여 bin, pkg, src 디렉토리 생성 src 디렉토리안에 지정된 도메인 디렉토리 추가 go에서 다운받은 코드를 지정된 도메인 별로 분류하여 저장 src 디렉토리안에 github.</description></item><item><title>Go 언어 문법 (Golang grammar)</title><link>https://sangjuncha-dev.github.io/posts/programming/golang/2021-03-02-golang-grammar/</link><pubDate>Wed, 10 Feb 2021 11:13:23 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/programming/golang/2021-03-02-golang-grammar/</guid><description>디렉토리 관련 함수 2021년 3월 3일 수요일 오전 8:55:31
단일 디렉토리 생성 os.Mkdir(path, permission)
err := os.Mkdir(&amp;#34;tmp&amp;#34;, 0755) if err != nil { log.Fatal(err) } 다중 디렉토리 생성 os.MkdirAll(path, permission) :
err := os.MkdirAll(&amp;#34;tmp/new&amp;#34;, 0755) if err != nil { log.Fatal(err) } 현재 작업 디렉토리 얻기 os.Getwd()
path, err := os.Getwd() if err != nil { log.Println(err) } fmt.Println(path) 디렉토리 존재유무 확인 os.Stat(paht)
if _, err := os.Stat(&amp;#34;/dirname&amp;#34;); os.IsNotExist(err) { // does not exist } if _, err := os.</description></item></channel></rss>