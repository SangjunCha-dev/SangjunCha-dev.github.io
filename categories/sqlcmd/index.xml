<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>sqlcmd on Sangjun 개발 블로그</title><link>https://sangjuncha-dev.github.io/categories/sqlcmd/</link><description>Recent content in sqlcmd on Sangjun 개발 블로그</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Wed, 30 Sep 2020 14:41:18 +0900</lastBuildDate><atom:link href="https://sangjuncha-dev.github.io/categories/sqlcmd/index.xml" rel="self" type="application/rss+xml"/><item><title>sqlcmd 사용법 (sqlcmd-guide)</title><link>https://sangjuncha-dev.github.io/posts/db/2020-09-30-sqlcmd-guide/</link><pubDate>Wed, 30 Sep 2020 14:41:18 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/db/2020-09-30-sqlcmd-guide/</guid><description>sqlcmd 대용량 sql 파일실행은 sqlcmd로만 실행가능하다.
다른 sql 실행방법은 메모리에 해당 sql 파일을 로딩한 상태로 실행하여 크기제한이 있지만 sqlcmd는 해당 sql문 하나하나 별도로 실행하기 때문이다.
사용 예시 sqlcmd \ -S 127.0.0.1,1433 \ -i input_file[ , input_file2...] \ -o output_file \ -U login_id \ -P password \ -d db_name -S : 접속할 IP,접속포트
-i : 실행할 sql 파일 지정
-i C:&amp;lt;filename&amp;gt;
-i \&amp;lt;Share$&amp;gt;&amp;lt;filename&amp;gt;
-i &amp;ldquo;C:\Some Folder&amp;lt;file name&amp;gt;&amp;rdquo;
-o : 실행결과 저장할 파일 지정</description></item></channel></rss>