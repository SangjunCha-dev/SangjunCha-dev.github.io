<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>sql on Sangjun 개발 블로그</title><link>https://sangjuncha-dev.github.io/tags/sql/</link><description>Recent content in sql on Sangjun 개발 블로그</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Tue, 13 Oct 2020 14:52:25 +0900</lastBuildDate><atom:link href="https://sangjuncha-dev.github.io/tags/sql/index.xml" rel="self" type="application/rss+xml"/><item><title>MSSQL SQL 명령어 (MSSQL SQL Command)</title><link>https://sangjuncha-dev.github.io/posts/db/2020-10-13-mssql-command/</link><pubDate>Tue, 13 Oct 2020 14:52:25 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/db/2020-10-13-mssql-command/</guid><description>1. 테이블 생성 (Create Table) 1.1 테이블 생성 문법 구조 ```sql CREATE TABLE 테이블명( 컬럼명 타입(크기) NOT NULL, --NULL 값이 들어갈 수 없음 컬럼명 타입 NULL DEFAULT(값), --초기값 지정 CONSTRAIN PK이름 PRIMARY KEY(컬럼명) --PK설정 ) ``` 1.2 테이블 생성 (예제) 컬럼 타입 : INT / NVARCHAR / VARCHAR / DATETIME ```sql CREATE TABLE MY_TABLE( NO_EMP NVARCHAR(10)NOT NULL, -- NULL 값이 들어갈 수 없음 NM_KOR NVARCHAR(40)NOT NULL, -- NULL 값이 들어갈 수 없음 AGE INT NULL DEFAULT (0), --초기값 = 0 TODAY DATETIME DEFAULT(GETDATE()), --초기값 현재날짜 ) --CONSTRAINT PK_MY_TABLE PRIMARY KEY(NO_EMP)--PK : NO_EMP ) ``` ```sql CREATE TABLE TB_AIX_AI001I( ID int PRIMARY KEY, AI_JSON nvarchar NULL, BL nvarchar(11) NOT NULL, IMGE_PATH nvarchar(300) NOT NULL, IMGE_NAME nvarchar(100) NOT NULL, DRCT_VH nvarchar(2) NOT NULL, IN_DT datetime default(GETDATE()) NOT NULL ) ``` 2.</description></item><item><title>MariaDB SQL 명령어 (MariaDB SQL Command)</title><link>https://sangjuncha-dev.github.io/posts/db/2020-09-28-mariadb-command/</link><pubDate>Wed, 30 Sep 2020 14:41:18 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/db/2020-09-28-mariadb-command/</guid><description>명령어 1. database 확인 ```sql SHOW DATABASES; ``` 2. database 생성 ```sql CREATE DATABASE database_name; ``` 3. 특정 database 접속 ```sql USE database_name; ``` 3-1. mysql database 접속 ```sql USE mysql; ``` 4. 사용자 확인 - (MariaDB[mysql]) ```sql SELECT HOST, USER, PASSWORD FROM USER; ``` 5. 사용자 계정 생성 - 'id'@'localhost' 이면 로컬에서만 접속 가능 ```sql CREATE USER 'user_id'@'%' IDENTIFIED BY 'user_password'; ``` ```sql CREATE USER 'user_id' IDENTIFIED BY 'user_password'; ``` 6.</description></item><item><title>PostgreDB SQL 명령어 (PostgreDB SQL Command)</title><link>https://sangjuncha-dev.github.io/posts/db/2020-10-20-postgresql-command/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sangjuncha-dev.github.io/posts/db/2020-10-20-postgresql-command/</guid><description>1. DATABASE 생성 DATABASE 생성
PostgreDB의 경우 대문자인식은 &amp;ldquo;&amp;ldquo;으로만 가능
CREATE DATABASE &amp;#34;{database_name}&amp;#34;; 2. USER 생성 USER 생성
CREATE USER {user_name} WITH PASSWORD &amp;#39;{user_password}&amp;#39; 개발용 계정으로 사용할 예정이기 때문에 SUPAERUSER 권한부여
ALTER USER {user_name} WITH SUPERUSER; 유저에게 특정 권한 부여
GRANT {permissions} ON DATABASE {db_name} TO {user_name}; 참고 URL : https://www.postgresql.org/docs/current/sql-grant.html
예시
GRANT ALL ON DATABASE &amp;#34;ABCD_DB&amp;#34; TO abcd_user; 계정 부여권한 해제</description></item></channel></rss>