<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>logging on Sangjun 개발 블로그</title><link>https://sangjuncha-dev.github.io/tags/logging/</link><description>Recent content in logging on Sangjun 개발 블로그</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Fri, 07 Jan 2022 13:24:20 +0900</lastBuildDate><atom:link href="https://sangjuncha-dev.github.io/tags/logging/index.xml" rel="self" type="application/rss+xml"/><item><title>golang Socket, TimeRotateFile logging</title><link>https://sangjuncha-dev.github.io/posts/programming/golang/2022-01-07-golang-socket-logging/</link><pubDate>Fri, 07 Jan 2022 13:24:20 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/programming/golang/2022-01-07-golang-socket-logging/</guid><description>1. 개요 golang 기본 로깅에서는 지원하지 않는 TimeRotate 로깅은 별도의 외부 라이브러리를 사용한다.
go get github.com/lestrrat-go/file-rotatelogs 이후에 소켓 통신을 같이 사용한 logging 프로그램까지 구현한다.
2. TimeRotateFile logging 해당 file-rotatelogs 라이브러리는 단일 파일 작성만 지원한다. 멀티 파일 작성은 다른 라이브러리를 사용해야 한다.
2.1. OPTIONS Patterm 로그저장 경로 및 파일이름 패턴지정(required) 예시: rotatelogs.New(&amp;quot;log/%Y-%m-%d.log&amp;quot;) Clock (default: rotatelogs.Local) 시간대 시스템 로컬 시간으로 설정 예시: rotatelogs.WithClock(rotatelogs.Local) RotationTime (default: 86400 sec) 로테이션 반복 주기 지정한 시간간격으로 파일 로테이션 동일파일 존재시 로그 추가작성으로 동작 time.</description></item></channel></rss>