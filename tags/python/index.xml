<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on Sangjun 개발 블로그</title><link>https://sangjuncha-dev.github.io/tags/python/</link><description>Recent content in python on Sangjun 개발 블로그</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Sun, 26 Dec 2021 22:02:26 +0900</lastBuildDate><atom:link href="https://sangjuncha-dev.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>python 날짜와 시간 계산</title><link>https://sangjuncha-dev.github.io/posts/programming/python/2021-12-26-python-calculate-the-date-and-time/</link><pubDate>Sun, 26 Dec 2021 22:02:26 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/programming/python/2021-12-26-python-calculate-the-date-and-time/</guid><description>python 날짜 및 시간 계산은 python 표준 라이브러리 datetime, 확장 라이브러리 dateutil 2개의 라이브러리가 있으며 단위의 차이가 있다.
datetime : 마이크로초, 밀리초, 초, 분, 시, 일, 주 단위 사용 dateutil : 마이크로초, 초, 분, 시, 일, 주, 월, 년 단위 사용 1. datetime 라이브러리 날짜와 시간을 조작하는 클래스를 제공하는 python 표준 라이브러리
사용예시 now : 현재 날짜 및 시간
import datetime as dt now = dt.datetime.now() print(f&amp;#34;now = {now}&amp;#34;) now = 2021-12-27 11:24:27.</description></item><item><title>Programmers Python (level 3)</title><link>https://sangjuncha-dev.github.io/posts/algorithm/programmers/2021-12-20-algorithm-programmers-python-level3/</link><pubDate>Mon, 20 Dec 2021 16:05:36 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/algorithm/programmers/2021-12-20-algorithm-programmers-python-level3/</guid><description>다단계 칫솔 판매 분류 : 2021 Dev-Matching: 웹 백엔드 개발자(상반기)
문제 링크
방법1 def solution(enroll, referral, seller, amount): answer = [] data = {&amp;#39;center&amp;#39;: {&amp;#39;amount&amp;#39;: 0,&amp;#39;parent&amp;#39;: None}} for i in range(len(enroll)): data[enroll[i]] = { &amp;#39;amount&amp;#39;: 0, &amp;#39;parent&amp;#39;: referral[i] if referral[i] != &amp;#39;-&amp;#39; else &amp;#39;center&amp;#39; } for i in range(len(seller)): sell = seller[i] price = amount[i] * 100 data[sell][&amp;#39;amount&amp;#39;] += price-price//10 price = price//10 while data[sell][&amp;#39;parent&amp;#39;] and price: sell = data[sell][&amp;#39;parent&amp;#39;] if sell == &amp;#39;center&amp;#39;: data[sell][&amp;#39;amount&amp;#39;] += price break data[sell][&amp;#39;amount&amp;#39;] += price-price//10 price = price//10 del data[&amp;#39;center&amp;#39;] for value in data.</description></item><item><title>python을 이용한 windows10 시스템 정보 및 사용량 모니터링</title><link>https://sangjuncha-dev.github.io/posts/programming/python/2021-06-16-python-windows10-monitoring/</link><pubDate>Wed, 16 Jun 2021 16:10:28 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/programming/python/2021-06-16-python-windows10-monitoring/</guid><description>운영체제 : windows 10
설치환경 : python 3.8.8, powershell 7.1
powershell 명령어 사용법 WMI 개체 가져오기(Get-CimInstance) python에서 powershell 명령 실행 방법 1. 콘솔 명령 실행 import subprocess import json cmd = &amp;#34;Get-CimInstance -Class Win32_OperatingSystem&amp;#34; subprocess.Popen(f&amp;#39;powershell.exe {cmd}&amp;#39;) 2. 실행결과 반환 디코딩을 하지 않으면 바이트 문자열로 나열되서 반환된다.
cmd = &amp;#34;Get-CimInstance -Class Win32_OperatingSystem&amp;#34; result = subprocess.Popen(f&amp;#39;powershell.exe {cmd}&amp;#39;, stdout=subprocess.PIPE) print(result) result = result.stdout.read() print(result) 결과
&amp;lt;subprocess.Popen object at 0x0000025175617B50&amp;gt; b&amp;#39;\r\nSystemDirectory Organization BuildNumber RegisteredUser SerialNumber Version \r\n--------------- ------------ ----------- -------------- ------------ ------- \r\nC:\\Windows\\system32 19000 UserName 00000-00000 10.</description></item><item><title>클래스 인스턴스 변수(self)와 함수 로컬변수 처리속도차이</title><link>https://sangjuncha-dev.github.io/posts/programming/python/2021-05-24-python-class-instance-variable-and-function-local-variable-performance/</link><pubDate>Mon, 24 May 2021 10:34:10 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/programming/python/2021-05-24-python-class-instance-variable-and-function-local-variable-performance/</guid><description>설치버전 : python 3.8.8
클래스 인스턴스 변수(self)와 함수 매개변수 처리속도 차이 예제 코드 1 import timeit class CheckTime: def __init__(self): self.a = 0 self.b = 0 self.c = 0 def process_self(self): self.a + self.b + self.c def process_argument(self, a, b, c): a + b + c def get_time(self): self.a = 1 self.b = 2 self.c = 3 def test1(): self.process_self() process_self_time = timeit.Timer(stmt=test1).repeat(number=1000000) a = self.a b = self.b c = self.</description></item><item><title>python opencv 사용법</title><link>https://sangjuncha-dev.github.io/posts/programming/python/2021-05-21-python-opencv-guide/</link><pubDate>Fri, 21 May 2021 17:43:21 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/programming/python/2021-05-21-python-opencv-guide/</guid><description>설치버전 : opencv-python 4.5.1.48
docs url import 라이브러리
import cv2 as cv cv.imread 이미지 파일 읽기 cv.imread(filename[, flags]) -&amp;gt; retval 매개변수 이름 설명 filename 로드할 파일 이름 flags cv 값을 사용할 수 있는 플래그 img = cv.imread(image_full_path) cv.imwrite 이미지 파일 저장 cv.imwrite(filename, img[, params]) -&amp;gt; retval 이미지 형식은 파일 이름 확장자에 따라 선택됨 cv.</description></item><item><title>python numpy 사용법</title><link>https://sangjuncha-dev.github.io/posts/programming/python/2021-05-21-python-numpy-guide/</link><pubDate>Fri, 21 May 2021 15:13:24 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/programming/python/2021-05-21-python-numpy-guide/</guid><description>선형대수 기반의 python 라이브러리
루프없이 배열 연산이 가능하여 연산속도가 빠름 설치버전 : numpy 1.20.2
import 라이브러리 import numpy as np 1. 생성 arange np.arange([start,] stop, [step,] dtype) 지정한 숫자 범위의 array 생성함수 np.arange(10) # [0 1 2 3 4 5 6 7 8 9] np.arange(0, 5, 0.5) # [0. 0.5 1. 1.5 2. 2.5 3. 3.5 4. 4.5] zeros np.zeros(shape, dtype) 0으로 선언된 array 생성 np.</description></item><item><title>python 자료구조와 알고리즘(by 미아 스타인) 책 정리</title><link>https://sangjuncha-dev.github.io/posts/programming/python/2021-05-17-python-datastructures-and-algorithms/</link><pubDate>Mon, 17 May 2021 16:29:43 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/programming/python/2021-05-17-python-datastructures-and-algorithms/</guid><description>Part 1 헬로, 자료구조! Chapter 01 숫자 1.1 정수 int() 불변형 객체로 문자열을 정수로 변환하거나 다른 진법의 문자열을 정수로 변환
int(문자열, 밑(n진법))
&amp;gt;&amp;gt;&amp;gt; s = &amp;#39;11&amp;#39; &amp;gt;&amp;gt;&amp;gt; b = int(s, 2) &amp;gt;&amp;gt;&amp;gt; print(b) 11 정수에 필요한 바이트 수(python 3.1이상)
&amp;gt;&amp;gt;&amp;gt; (정수).bit_length() 10 발생가능한 Exception : ValueError
1.2 부동 소수점 float() float 32bit
1bit 부호, 8bit 지수, 23bit 유효 숫자 자릿수 1.2.1 부동소수점끼리 비교하기 이진수 분수로 표현으로 소수점의 정확한 비교는 어렵지만,</description></item><item><title>pyinstaller 라이브러리 사용법 (Pyinstaller Library Guide)</title><link>https://sangjuncha-dev.github.io/posts/programming/python/2021-03-10-pyinstaller-guide/</link><pubDate>Wed, 10 Mar 2021 14:46:19 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/programming/python/2021-03-10-pyinstaller-guide/</guid><description>python 파일을 윈도우에서 python 이나 가상환경 설정없이 실행이 가능한 .exe 으로 변환해주는 라이브러리
Docs URL - https://pyinstaller.readthedocs.io/en/stable/usage.html
설치환경 : Windows 10
1. 설치 python 실행이 가능한 가상환경 터미널에서 아래의 명령어 실행
pip install pyinstaller 2. 간단한 사용예제 pyinstaller --clean --distpath . -F -n [프로그램이름] [변환시킬 파일].py 3. 옵션 옵션 설명 &amp;ndash;clean 빌드하기 전에 PyInstaller 캐시를 정리하고 임시파일 제거 -F, &amp;ndash;onefile 단일 실행파일로 생성(실행시 사용한 라이브러리 임시파일 생성됨) -D, &amp;ndash;onedir 실행 파일을 포함하는 단일 폴더로 생성 &amp;ndash;distpath DIR 실행파일 생성 경로(default: .</description></item><item><title>pyshark 라이브러리 사용법 (pyshark Library Guide)</title><link>https://sangjuncha-dev.github.io/posts/programming/python/2021-02-10-pyshark-library-guide/</link><pubDate>Wed, 10 Feb 2021 11:13:23 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/programming/python/2021-02-10-pyshark-library-guide/</guid><description>Docs URL - https://github.com/KimiNewt/pyshark/
설치환경 : Windows 10, python 3.7
1. 설치 와이어샤크 프로그램에 포함된 npcap 설치 필요 https://www.wireshark.org/download.html pip install pyshark 2. 사용법 캡쳐파일 읽기
capture = pyshark.FileCapture(&amp;#39;./test.pcapng&amp;#39;) 실시간 패킷캡처 interface
capture = pyshark.LiveCapture(interface=&amp;#39;이더넷&amp;#39;, bpf_filter=&amp;#39;ether src host 11:22:33:44:55:66&amp;#39;, use_json=True, include_raw=True) 패킷 캡처
패킷 1개 캡처하거나 10ms 경과하면 캡처 결과 반환 capture.sniff(packet_count=1, timeout=10) 패킷 10개 캡처하거나 10ms 경과하면 캡처 결과 반환 capture.</description></item><item><title>scapy 라이브러리 사용법 (Scapy Library Guide)</title><link>https://sangjuncha-dev.github.io/posts/programming/python/2021-02-09-scapy-library-guide/</link><pubDate>Tue, 09 Feb 2021 15:25:35 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/programming/python/2021-02-09-scapy-library-guide/</guid><description>Docs URL - https://scapy.readthedocs.io/en/latest/#
설치환경 : Windows 10
설치 와이어샤크 프로그램에 포함된 npcap 설치 필요 https://www.wireshark.org/download.html pip install --pre scapy[basic] Client 예제 from scapy.all import * from scapy.utils import rdpcap import datetime as dt # PCAP 파일 읽기 # could be used like this rdpcap(&amp;#34;filename&amp;#34;,500) fetches first 500 pkts pkts = rdpcap(&amp;#34;./pcap/test.pcapng&amp;#34;, -1) pkts = pkts[21:100] cnt = 0 repeat = 10 s_time = dt.datetime.now() for _ in range(repeat): for pkt in pkts: # print(f&amp;#34;hexdump(pkt) = {hexdump(pkt)}&amp;#34;) # Send one or more packets at 2 layer sendp(pkt, inter=0, loop=0, count=1, iface=None) # Send one or more packets at 3 layer # send(pkt, inter=0, loop=0, count=1, iface=None) cnt += 1 print(cnt) sendp(b&amp;#39;&amp;#39;, inter=0, loop=0, count=1, iface=None) time.</description></item><item><title>paramiko-scp 라이브러리 사용법 (paramiko-scp Library Guide)</title><link>https://sangjuncha-dev.github.io/posts/programming/python/2021-01-06-paramiko-scp-guide/</link><pubDate>Wed, 06 Jan 2021 17:36:17 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/programming/python/2021-01-06-paramiko-scp-guide/</guid><description>paramiko, scp 라이브러리 연계 사용한 ssh 파일 전송
라이브러리 암호화 여부 속도 paramiko 로그인:암호화 / 파일전송:암호화 느림 paramiko+scp 로그인:암호화 / 파일전송:평문 보통 실습환경 : windows10, 원격서버환경 : linux(RHEL8)
사전에 ssh 접속가능한 linux를 구축한 후 실습 진행
라이브러리 설치 pip install paramiko pip install scp paramiko : SSH 접속 및 종료 기능
Docs URL - http://docs.paramiko.org/en/stable/ scp : 파일 전송 및 다운로드 기능</description></item><item><title>Programmers Python (level 2)</title><link>https://sangjuncha-dev.github.io/posts/algorithm/programmers/2020-12-22-algorithm-programmers-python-level2/</link><pubDate>Tue, 22 Dec 2020 22:38:31 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/algorithm/programmers/2020-12-22-algorithm-programmers-python-level2/</guid><description>프린터 분류 : 스택/큐
문제 링크
우선순위 priorities 리스트의 최댓값을 num_max변수에 대입 cursor변수에 priorities[0]값 추출하여 대입 cursor 값이 최댓값 일때 cnt 1증가 이때 location값이 0이면 break cursor 값이 최댓값 아닐때 리스트 맨뒤에 cursor 값 추가 이때 location값이 0이면 location변수에 priorities길이값 대입 location 1 감소 위의 순서를 location 0 이상일때 while문 반복실행 def solution(priorities, location): cnt = 1 while True: num_max = max(priorities) cursor = priorities.pop(0) if cursor == num_max: if location == 0: return cnt cnt += 1 else: priorities.</description></item><item><title>Programmers Python (level 1)</title><link>https://sangjuncha-dev.github.io/posts/algorithm/programmers/2020-12-15-algorithm-programmers-python-level1/</link><pubDate>Tue, 15 Dec 2020 15:05:35 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/algorithm/programmers/2020-12-15-algorithm-programmers-python-level1/</guid><description>모의고사 분류 : 완전탐색
문제 링크
입력받은 answers 리스트와 수포자들의 답 리스트와 비교하여 같다면 answer_cnt변수에 정답 개수 추가 answer_cnt 리스트의 최댓값과 각 answer_cnt 원소와 비교하여 같다면 index+1 값을 answer리스트에 추가 최대 정답자 answer 리스트 return def solution(answers): answer = [] answer_cnt = [0, 0, 0] answer_list = [ [1, 2, 3, 4, 5], [2, 1, 2, 3, 2, 4, 2, 5], [3, 3, 1, 1, 2, 2, 4, 4, 5, 5] ] # 정답 매칭 for i in range(len(answers)): ans = answers[i] if ans == answer_list[0][i%5]: answer_cnt[0] += 1 if ans == answer_list[1][i%8]: answer_cnt[1] += 1 if ans == answer_list[2][i%10]: answer_cnt[2] += 1 # 최다 정답자 추출 max_cnt = max(answer_cnt) for i, cnt in enumerate(answer_cnt): if max_cnt == cnt: answer.</description></item><item><title>LeetCode Python (Easy)</title><link>https://sangjuncha-dev.github.io/posts/algorithm/leetcode/2020-12-01-algorithm-leetcode-python-easy/</link><pubDate>Tue, 01 Dec 2020 17:30:00 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/algorithm/leetcode/2020-12-01-algorithm-leetcode-python-easy/</guid><description>1. Two Sum nums 리스트 속성값 중 두개의 값이 target 값과 동일할때 해당 속성 값의 index 반환 class Solution: def twoSum(self, nums: List[int], target: int) -&amp;gt; List[int]: for i, num in enumerate(nums): for j, num2 in enumerate(nums[i+1:]): if i != j+i+1: if target == num+num2: return [i, j+i+1] 2020-11-27
Runtime: 40 ms, faster than 97.02% of Python3 online submissions for Two Sum. Memory Usage: 14.5 MB, less than 89.</description></item><item><title>pyftpdlib 라이브러리 사용법 (pyftpdlib Library Guide)</title><link>https://sangjuncha-dev.github.io/posts/programming/python/2020-11-16-pyftpdlib-guide/</link><pubDate>Mon, 16 Nov 2020 13:30:41 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/programming/python/2020-11-16-pyftpdlib-guide/</guid><description>Docs URL - https://pyftpdlib.readthedocs.io/en/latest/
FTP Server 라이브러리 설치 pip install pyftpdlib 실습 버전 : pyftpdlib 1.5.6
사용예제 코드 FTP Server 예제 ftp server 실행 후 client 테스트 가능
from pyftpdlib.authorizers import DummyAuthorizer # 사용자 인증을 생성하는 모듈 from pyftpdlib.handlers import FTPHandler # 사용자 인증, 파일 전송, 로깅 등 FTP서버를 조작하는 모듈 # from pyftpdlib.handlers import TLS_FTPHandler from pyftpdlib.servers import FTPServer # FTP서버를 실행하는 모듈 # from pyftpdlib.servers import ThreadedFTPServer import os class FileServer: def __init__(self): self.</description></item><item><title>libmagic 라이브러리 사용법 (libmagic Library Guide)</title><link>https://sangjuncha-dev.github.io/posts/programming/python/2020-11-05-python-magic-guide/</link><pubDate>Thu, 05 Nov 2020 09:53:16 +0900</pubDate><guid>https://sangjuncha-dev.github.io/posts/programming/python/2020-11-05-python-magic-guide/</guid><description>미디어 타입(media type), MIME 타입(MIME type)
실행환경 : windows 10
라이브러리 설치 pip install libmagic pip install python-magic-bin libmagic : 파일타입을 MIME 타입으로 확인해주는 라이브러리
magic은 리눅스 환경에서 실행되는 프로그램 윈도우즈 환경에서는 윈도우용 magic 설치가 필요함 python-magic-bin : 윈도우용 magic 라이브러리
예제 코드 import magic r1 = magic.from_file(&amp;#34;test1.txt&amp;#34;) r2 = magic.from_file(&amp;#34;test1.txt&amp;#34;, mime=True) print(f&amp;#34;filetype = {r1}, \nmime = {r2}&amp;#34;) # filetype = UTF-8 Unicode text, with CRLF line terminators, # mime = text/plain file_data = open(&amp;#39;test1.</description></item></channel></rss>